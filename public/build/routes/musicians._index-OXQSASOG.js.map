{
  "version": 3,
  "sources": ["../../../app/routes/musicians._index.tsx", "../../../app/components/molecules/MusicianRow.tsx", "../../../app/components/organisms/MusiciansTable.tsx", "../../../app/components/molecules/StrapiPagination.tsx", "../../../app/components/molecules/StrapiListInfos.tsx", "../../../app/pages/Musicians.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/musicians._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/musicians._index.tsx\");\n  import.meta.hot.lastModified = \"1702331344131.4463\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"react-router\";\nimport { MusicianService } from \"~/services/MusicianService\";\nimport Musicians from \"~/pages/Musicians\";\nexport const meta = () => {\n  return [{\n    title: \"Musiciens\"\n  }, {\n    name: \"description\",\n    content: \"Liste des musiciens\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const page = new URL(request.url).searchParams.get('page');\n  const {\n    musicians,\n    meta\n  } = await MusicianService.getAll(parseInt(page || '1'));\n  return {\n    musicians,\n    meta\n  };\n}\nexport default function Index() {\n  _s();\n  const {\n    musicians,\n    meta\n  } = useLoaderData();\n  return <Musicians musicians={musicians} meta={meta} />;\n}\n_s(Index, \"UGd6Srho9ZIz3WBO/oX8v/JIOKQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/molecules/MusicianRow.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/molecules/MusicianRow.tsx\");\n  import.meta.hot.lastModified = \"1703336444127.8154\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nexport default function MusicianRow(props) {\n  return <tr className=\"relative hover:bg-secondary hover:text-white even:bg-black/5\">\n            <th>\n                <Link to={`/musicians/${props.musician.id}`} className=\"after:block after:w-full after:h-full after:absolute after:top-0 after:left-0\">\n                    {props.musician.id}\n                </Link>\n            </th>\n            <td>{props.musician.full_name}</td>\n            <td>{props.musician.pupitre.title}</td>\n        </tr>;\n}\n_c = MusicianRow;\nvar _c;\n$RefreshReg$(_c, \"MusicianRow\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/organisms/MusiciansTable.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/organisms/MusiciansTable.tsx\");\n  import.meta.hot.lastModified = \"1702499854257.7227\";\n}\n// REMIX HMR END\n\nimport MusicianRow from \"~/components/molecules/MusicianRow\";\nexport default function MusiciansTable(props) {\n  return <div className=\"overflow-x-auto\">\n            <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Nom</th>\n                    <th>Pupitre</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.musicians.map((musician, index) => <MusicianRow musician={musician} key={index} />)}\n                </tbody>\n            </table>\n        </div>;\n}\n_c = MusiciansTable;\nvar _c;\n$RefreshReg$(_c, \"MusiciansTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/molecules/StrapiPagination.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/molecules/StrapiPagination.tsx\");\n  import.meta.hot.lastModified = \"1702333817934.5112\";\n}\n// REMIX HMR END\n\nimport { Link } from \"@remix-run/react\";\nexport default function StrapiPagination(props) {\n  const {\n    meta\n  } = props;\n  if (!meta.pagination) return null;\n  const {\n    page,\n    pageCount\n  } = meta.pagination;\n  const currentPage = page;\n  return <div className=\"flex justify-center\">\n            <div className={`${pageCount > 1 ? 'join' : ''}`}>\n                {Array.from({\n        length: pageCount\n      }, (_, i) => i + 1).map((page, index) => <Link key={index} className={`join-item btn btn-square ${currentPage === page ? 'btn-primary' : ''}`} to={`/musicians?page=${page}`}>\n                        {page}\n                    </Link>)}\n            </div>\n        </div>;\n}\n_c = StrapiPagination;\nvar _c;\n$RefreshReg$(_c, \"StrapiPagination\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/molecules/StrapiListInfos.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/molecules/StrapiListInfos.tsx\");\n  import.meta.hot.lastModified = \"1702585579891.7485\";\n}\n// REMIX HMR END\n\nexport default function StrapiListInfos(props) {\n  const {\n    meta\n  } = props;\n  if (!meta.pagination) return null;\n  const pageSize = parseInt(meta.pagination.pageSize);\n  const itemsStart = parseInt(meta.pagination.page) * pageSize - pageSize + 1;\n  const viewedItems = (parseInt(meta.pagination.page) - 1) * pageSize;\n  const maxOnPage = viewedItems + parseInt(meta.pagination.pageSize) > meta.pagination.total ? meta.pagination.total : viewedItems + parseInt(meta.pagination.pageSize);\n  return <div className=\"flex items-center justify-between text-sm text-black/50\">\n            <span>R\u00E9sultats: {itemsStart} \u00E0 {maxOnPage}</span>\n            <span>Nombre de r\u00E9sultats: {meta.pagination.total}</span>\n        </div>;\n}\n_c = StrapiListInfos;\nvar _c;\n$RefreshReg$(_c, \"StrapiListInfos\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/pages/Musicians.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/pages/Musicians.tsx\");\n  import.meta.hot.lastModified = \"1702073830562.31\";\n}\n// REMIX HMR END\n\nimport MusiciansTable from \"~/components/organisms/MusiciansTable\";\nimport StrapiPagination from \"~/components/molecules/StrapiPagination\";\nimport StrapiListInfos from \"~/components/molecules/StrapiListInfos\";\nexport default function Musicians(props) {\n  return <div className=\"flex flex-col gap-10\">\n            <h2>Liste des musiciens</h2>\n            <StrapiListInfos meta={props.meta} />\n            <MusiciansTable musicians={props.musicians} />\n            <StrapiPagination meta={props.meta} />\n        </div>;\n}\n_c = Musicians;\nvar _c;\n$RefreshReg$(_c, \"Musicians\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "meta", "page", "_c", "import_jsx_dev_runtime", "meta", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "meta", "_c"]
}
