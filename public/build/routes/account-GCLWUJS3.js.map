{
  "version": 3,
  "sources": ["../../../app/routes/account.tsx", "../../../app/components/molecules/AccountInformation.tsx", "../../../app/pages/Account.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/account.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/account.tsx\");\n  import.meta.hot.lastModified = \"1703021647082.944\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from \"react-router\";\nimport { SessionService } from \"~/services/SessionService\";\nimport { UserService } from \"~/services/UserService\";\nimport { redirect } from \"@remix-run/node\";\nimport Account from \"~/pages/Account\";\nexport const meta = () => {\n  return [{\n    title: \"Mon compte\"\n  }, {\n    name: \"description\",\n    content: \"Mon compte\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const {\n    isLoggedIn,\n    userId,\n    userJwt\n  } = await SessionService.isUserLoggedIn(request);\n  if (!isLoggedIn || !userId || !userJwt) {\n    return redirect('/login');\n  }\n  const user = await UserService.getByID(userId);\n  return {\n    user\n  };\n}\nexport default function Index() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  return <Account user={user} />;\n}\n_s(Index, \"UGd6Srho9ZIz3WBO/oX8v/JIOKQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/molecules/AccountInformation.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/molecules/AccountInformation.tsx\");\n  import.meta.hot.lastModified = \"1703103005427.23\";\n}\n// REMIX HMR END\n\nexport default function AccountInformation({\n  name,\n  label,\n  value\n}) {\n  return <div className=\"flex flex-col\">\n                <span className=\"font-bold\">{label}</span>\n                <span>{value}</span>\n        </div>;\n}\n_c = AccountInformation;\nvar _c;\n$RefreshReg$(_c, \"AccountInformation\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/pages/Account.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/pages/Account.tsx\");\n  import.meta.hot.lastModified = \"1703103247788.662\";\n}\n// REMIX HMR END\n\nimport SuitTable from \"~/components/organisms/SuitTable\";\nimport AccountInformation from \"~/components/molecules/AccountInformation\";\nexport default function Account({\n  user\n}) {\n  return <div className=\"flex flex-col gap-10\">\n            <div>\n                <h1>Mon compte</h1>\n                <p>Bonjour {user.musician.full_name} !</p>\n            </div>\n            <div role=\"tablist\" className=\"tabs tabs-lifted\">\n                <input type=\"radio\" name=\"my_tabs_2\" role=\"tab\" className=\"tab\" aria-label=\"Mon Costume\" defaultChecked />\n                <div role=\"tabpanel\" className=\"tab-content bg-base-100 border-base-300 rounded-box p-6\">\n                    <SuitTable suit={user.musician.suit} />\n                </div>\n\n                <input type=\"radio\" name=\"my_tabs_2\" role=\"tab\" className=\"tab\" aria-label=\"Mes informations\" />\n                <div role=\"tabpanel\" className=\"tab-content bg-base-100 border-base-300 rounded-box p-6\">\n                    <div className=\"flex flex-col gap-4\">\n                        <AccountInformation name=\"email\" label=\"Email\" value={user.email} />\n                        <AccountInformation name=\"username\" label=\"Nom d'utilisateur\" value={user.username} />\n                        <AccountInformation name=\"birth_date\" label=\"Date de naissance\" value={user.musician.birth_date} />\n                        <AccountInformation name=\"pupitre\" label=\"Pupitre\" value={user.musician.pupitre.title} />\n                    </div>\n                </div>\n            </div>\n        </div>;\n}\n_c = Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c"]
}
