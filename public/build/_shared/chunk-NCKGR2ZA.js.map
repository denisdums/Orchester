{
  "version": 3,
  "sources": ["../../../app/providers/UserProvider.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/providers/UserProvider.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/providers/UserProvider.tsx\");\n  import.meta.hot.lastModified = \"1706562013978.2668\";\n}\n// REMIX HMR END\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport const UserContext = createContext({\n  isLogged: false,\n  user: undefined\n});\nexport default function UserProvider(props) {\n  _s();\n  const [isLogged, setIsLogged] = useState(props.isLogged);\n  const [user, setUser] = useState(props.user);\n  const [themeSwitchChecked, setThemeSwitchChecked] = useState(false);\n  useEffect(() => {\n    setIsLogged(props.isLogged);\n    setUser(props.user);\n    const theme = localStorage.getItem(\"theme\") ?? \"light\";\n    setThemeSwitchChecked(theme === \"dark\");\n  }, [props.isLogged, props.user]);\n  return <UserContext.Provider value={{\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    themeSwitchChecked,\n    setThemeSwitchChecked\n  }}>\n            {props.children}\n        </UserContext.Provider>;\n}\n_s(UserProvider, \"LjSsP82yv/ZvZ5W1FIigmEy8Z88=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const {\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    themeSwitchChecked,\n    setThemeSwitchChecked\n  } = useContext(UserContext);\n  return {\n    isLogged,\n    setIsLogged,\n    user,\n    setUser,\n    themeSwitchChecked,\n    setThemeSwitchChecked\n  };\n};\n_s2(useUser, \"5bgCUPnFAx6/GTdlLn2B5+766pE=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAsBA,mBAA+D;AAgBtD;AArCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAAtB,IACE,MAAM,aAAa;AAErB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAIO,IAAM,kBAAc,4BAAc;AAAA,EACvC,UAAU;AAAA,EACV,MAAM;AACR,CAAC;AACc,SAAR,aAA8B,OAAO;AAC1C,KAAG;AACH,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,MAAM,QAAQ;AACvD,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAS,MAAM,IAAI;AAC3C,QAAM,CAAC,oBAAoB,qBAAqB,QAAI,uBAAS,KAAK;AAClE,8BAAU,MAAM;AACd,gBAAY,MAAM,QAAQ;AAC1B,YAAQ,MAAM,IAAI;AAClB,UAAM,QAAQ,aAAa,QAAQ,OAAO,KAAK;AAC/C,0BAAsB,UAAU,MAAM;AAAA,EACxC,GAAG,CAAC,MAAM,UAAU,MAAM,IAAI,CAAC;AAC/B,SAAO,mDAAC,YAAY,UAAZ,EAAqB,OAAO;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GACW,gBAAM,YARV;AAAA;AAAA;AAAA;AAAA,SASD;AACR;AACA,GAAG,cAAc,8BAA8B;AAC/C,KAAK;AACE,IAAM,UAAU,MAAM;AAC3B,MAAI;AACJ,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,QAAI,yBAAW,WAAW;AAC1B,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,IAAI,SAAS,8BAA8B;AAC3C,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
